name: Build and Test

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    types: [ opened, synchronize ]

# Prevent multiple workflows from running simultaneously for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Enable IPv6 on the runner
      - name: Enable IPv6
        run: |
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
          sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0
          sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=0
          # Verify IPv6 is working on host
          echo "Testing IPv6 connectivity on host:"
          ping6 -c 1 ::1
          ip -6 addr show lo
          
      - name: set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'temurin'
#          cache: gradle # https://github.com/actions/setup-java/issues/683
      - name: Display host of runner
        run: echo $HOST_NAME
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and Publish the Common Library to the local Maven repository
        run: ./gradlew :icmp-common:publishToMavenLocal
      - name: Build and Publish the Android and Linux Libraries to the local Maven repository
        run: ./gradlew :icmp-android:publishToMavenLocal :icmp-linux:publishToMavenLocal
      - name: Build with Gradle
        run: ./gradlew assemble          # we don't use build because that will run the tests, we want that separate
      - name: JVM Unit tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: ./gradlew check
      - name: Android Instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          target: google_apis
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -netdelay none -netspeed full
          script: |
            # Wait for device to be ready
            adb wait-for-device
            echo "Device is ready, configuring IPv6..."
            
            # Try multiple approaches to enable IPv6 in emulator
            adb shell "sysctl -w net.ipv6.conf.all.disable_ipv6=0" 2>/dev/null || echo "sysctl method failed"
            adb shell "echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6" 2>/dev/null || echo "proc write method failed" 
            adb shell "echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6" 2>/dev/null || true
            adb shell "echo 0 > /proc/sys/net/ipv6/conf/lo/disable_ipv6" 2>/dev/null || true
            
            # Show current IPv6 status
            echo "IPv6 configuration in emulator:"
            adb shell "cat /proc/sys/net/ipv6/conf/all/disable_ipv6" 2>/dev/null || echo "Cannot read IPv6 config"
            adb shell "ip -6 addr show lo" 2>/dev/null || echo "Cannot show IPv6 addresses"
            
            # Test IPv6 connectivity
            echo "Testing IPv6 connectivity in emulator..."
            if adb shell "ping6 -c 1 ::1" 2>/dev/null; then
              echo "IPv6 ping successful!"
            else
              echo "IPv6 ping failed, but tests may still work (ICMP sockets work differently)"
            fi
            
            # Run the Android instrumented tests with retry
            for attempt in 1 2 3; do
              echo "Running Android instrumented tests (attempt $attempt)..."
              if timeout 1200 ./gradlew connectedCheck; then
                echo "Android tests passed on attempt $attempt"
                break
              else
                if [ $attempt -lt 3 ]; then
                  echo "Android tests failed on attempt $attempt, retrying..."
                  sleep 30
                else
                  echo "Android tests failed after 3 attempts"
                  exit 1
                fi
              fi
            done
      - name: Upload ICMP Common Unit Tests Report to CodeCov
        # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: commonunittests
          files: ./icmp-common/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Upload ICMP Linux Unit Tests Report to CodeCov
        # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: linuxunittests
          files: ./icmp-linux/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Upload Instrumented Tests Report to CodeCov
        # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: instrumentedtests
          files: ./icmp-android/build/reports/coverage/androidTest/debug/connected/report.xml